#!/usr/bin/python3
#
# usage  : python3 xml.py <output.xml> <x86.report> <mem.report>
# author : nival
# link   : github.com/0xni
# 
#

from reader import reader
from writer import writer
from sys import argv


x86_file = 'x86.txt'
mem_file = 'mem.txt'
output_file = 'output.xml'
if len(argv) > 4:
    print('wrong usage')
    exit(0) 
if len(argv) >= 2:
    output_file = argv[1]
if len(argv) >= 3:
    x86_file = argv[2]
if len(argv) == 4:
    mem_file = argv[3]

r=reader(x86_file, mem_file)
w=writer(output_file)

w.com1('root','root')
w.com1('system','system')
w.param('number_of_cores', r.get('num_core'))
w.param('number_of_L1Directories','0')
w.param('number_of_L2Directories','0')
w.param('number_of_L2s',r.get('num_l2'))
w.param('Private_L2','1')
w.param('number_of_L3s',r.get('num_l3'))
#w.param('number_of_NoCs',r.get('num_net'))
w.param('number_of_NoCs','1')
w.param('homogeneous_cores','1')
w.param('homogeneous_L2s','1')
w.param('homogeneous_L1Directories','1')
w.param('homogeneous_L2Directories','1')
w.param('homogeneous_L3s','1')
w.param('homogeneous_ccs','1')
w.param('homogeneous_NoCs','1')
w.param('core_tech_node','45')
w.param('target_core_clockrate','3000')
w.param('temperature','380')
w.param('number_cache_levels',r.get('num_level'))
w.param('interconnect_projection_type','0')
w.param('device_type','0')
w.param('longer_channel_device','1')
w.param('power_gating','1')
w.param('machine_bits','32')
w.param('virtual_address_width','32')
w.param('physical_address_width','52')
w.param('virtual_memory_page_size','4096') 

w.stat('total_cycles',r.get('cycle')) 
w.stat('idle_cycles','0')
w.stat('busy_cycles',r.get('cycle'))

w.com1('system.core0','core0')
w.param('clock_rate' ,'3000')
w.param('vdd' ,'1.25')
w.param('power_gating_vcc' ,'-1')
w.param('opt_local' ,'0') 
w.param('instruction_length' ,'32')
w.param('opcode_width' ,'16')
w.param('x86' ,'1')
w.param('micro_opcode_width' ,'8')
w.param('machine_type' ,'0')	
w.param('number_hardware_threads' ,r.get('num_thread'))
w.param('fetch_width' ,'4')		
w.param('number_instruction_fetch_ports' ,'1')
w.param('decode_width' ,'4')
w.param('issue_width' ,'4')
w.param('peak_issue_width' ,'6')
w.param('commit_width' ,'4')
w.param('fp_issue_width' ,'2')
w.param('prediction_width' ,'1') 
w.param('pipelines_per_core' ,'1,1')
w.param('pipeline_depth' ,'7,7')
w.param('ALU_per_core' ,'6')
w.param('MUL_per_core' ,'2')
w.param('FPU_per_core' ,'2')		
w.param('instruction_buffer_size' ,'32')
w.param('decoded_stream_buffer_size' ,'16')
w.param('instruction_window_scheme' ,'0')
w.param('instruction_window_size' ,'64')
w.param('fp_instruction_window_size' ,'64')
w.param('ROB_size' ,'128')
w.param('archi_Regs_IRF_size' ,'16')			
w.param('archi_Regs_FRF_size' ,'32')
w.param('phy_Regs_IRF_size' ,'256')
w.param('phy_Regs_FRF_size' ,'256')
w.param('rename_scheme' ,'0')
w.param('checkpoint_depth' ,'0')
w.param('register_windows_size' ,'0')
w.param('LSU_order' ,'inorder')
w.param('store_buffer_size' ,'96')
w.param('load_buffer_size' ,'48')	
w.param('memory_ports' ,'2')			
w.param('RAS_size' ,'64')						
w.stat('total_instructions' ,r.get('total_instructions'))
w.stat('int_instructions' ,r.get('int_instructions'))
w.stat('fp_instructions' ,r.get('fp_instructions'))
w.stat('branch_instructions' ,r.get('branch_instructions'))
w.stat('branch_mispredictions' ,r.get('branch_mispredictions'))
w.stat('load_instructions' ,r.get('load_instructions'))
w.stat('store_instructions' ,r.get('store_instructions'))
w.stat('committed_instructions' ,r.get('committed_instructions'))
w.stat('committed_int_instructions' ,r.get('committed_int_instructions'))
w.stat('committed_fp_instructions' ,r.get('committed_fp_instructions'))
w.stat('pipeline_duty_cycle' ,r.get('pipeline_duty_cycle'))
w.stat('total_cycles' ,r.get('cycle'))
w.stat('idle_cycles' ,'0')
w.stat('busy_cycles'  ,r.get('cycle'))
w.stat('ROB_reads' ,r.get('ROB_reads'))
w.stat('ROB_writes' ,r.get('ROB_writes'))
w.stat('rename_reads' ,str(int(r.get('int_rename_reads'))+int(r.get('fp_rename_reads')))) 
w.stat('rename_writes' ,str(int(r.get('int_rename_writes'))+int(r.get('fp_rename_writes')))) 
w.stat('fp_rename_reads' ,r.get('fp_rename_reads'))
w.stat('fp_rename_writes' ,r.get('fp_rename_writes'))
w.stat('inst_window_reads' ,r.get('inst_window_reads'))
w.stat('inst_window_writes' ,r.get('inst_window_writes'))
w.stat('inst_window_wakeup_accesses' ,r.get('inst_window_wakeup_accesses'))
w.stat('fp_inst_window_reads' ,'0')
w.stat('fp_inst_window_writes' ,'0')
w.stat('fp_inst_window_wakeup_accesses' ,'0')
w.stat('int_regfile_reads' ,r.get('int_regfile_reads'))
w.stat('float_regfile_reads' ,r.get('int_regfile_writes'))
w.stat('int_regfile_writes' ,r.get('float_regfile_reads'))
w.stat('float_regfile_writes' ,r.get('float_regfile_writes'))
w.stat('function_calls' ,r.get('function_calls'))
w.stat('context_switches' ,r.get('context_switches'))
w.stat('ialu_accesses' ,r.get('ialu_accesses'))			
w.stat('fpu_accesses' ,r.get('fpu_accesses'))
w.stat('mul_accesses' ,r.get('mul_accesses'))
w.stat('cdb_alu_accesses' ,'0')
w.stat('cdb_mul_accesses' ,'0')
w.stat('cdb_fpu_accesses' ,'0')
w.stat('IFU_duty_cycle' ,'0.25')			
w.stat('LSU_duty_cycle' ,'0.25')
w.stat('MemManU_I_duty_cycle' ,'0.25')
w.stat('MemManU_D_duty_cycle' ,'0.25')
w.stat('ALU_duty_cycle' ,'1')
w.stat('MUL_duty_cycle' ,'0.3')
w.stat('FPU_duty_cycle' ,'0.3')
w.stat('ALU_cdb_duty_cycle' ,'1')
w.stat('MUL_cdb_duty_cycle' ,'0.3')
w.stat('FPU_cdb_duty_cycle' ,'0.3')
w.param('number_of_BPT' ,'2')
w.com1('system.core0.predictor','PBT')
w.param('local_predictor_size','10,3')
w.param('local_predictor_entries','1024')
w.param('global_predictor_entries','4096')
w.param('global_predictor_bits','2')
w.param('chooser_predictor_entries','4096')
w.param('chooser_predictor_bits','2')
w.com2()
w.com1('system.core0.itlb','itlb')
w.param('number_entries','128')
w.stat('total_accesses',r.get('itlb_total_accesses'))
w.stat('total_misses',r.get('itlb_total_misses'))
w.stat('conflicts',r.get('itlb_conflicts'))	
w.com2()
w.com1('system.core0.icache','icache')
w.param('icache_config',r.get('i_config'))
w.param('buffer_sizes','16, 16, 16,0')
w.stat('read_accesses',r.get('icache_read_accesses'))
w.stat('read_misses',r.get('icache_read_misses'))
w.stat('conflicts',r.get('icache_conflicts'))				
w.com2()
w.com1('system.core0.dtlb','dtlb')
w.param('number_entries','128')
w.stat('total_accesses',r.get('dtlb_total_accesses'))
w.stat('total_misses',r.get('dtlb_total_misses'))
w.stat('conflicts',r.get('dtlb_conflicts'))	
w.com2()
w.com1('system.core0.dcache','dcache')
w.param('dcache_config',r.get('d_config'))
w.param('buffer_sizes','16, 16, 16, 16')
w.stat('read_accesses',r.get('dcache_read_accesses'))
w.stat('write_accesses',r.get('dcache_write_accesses'))
w.stat('read_misses',r.get('dcache_read_misses'))
w.stat('write_misses',r.get('dcache_write_misses'))
w.stat('conflicts',r.get('dcache_conflicts'))	
w.com2()
w.param('number_of_BTB','2')
w.com1('system.core0.BTB','BTB')
w.param('BTB_config','5120,4,2,1, 1,3') 
w.stat('read_accesses',r.get('btb_read_accesses')) 
w.stat('write_accesses',r.get('btb_write_accesses'))
w.com2()
w.com2()

w.com1('system.L1Directory0','L1Directory0')
w.param('Directory_type','0')
w.param('Dir_config','4096,2,0,1,100,100, 8')
w.param('buffer_sizes','8, 8, 8, 8')	
w.param('clockrate','3000')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('ports','1,1,1')
w.param('device_type','0')
w.stat('read_accesses','800000')
w.stat('write_accesses','27276')
w.stat('read_misses','1632')
w.stat('write_misses','183')
w.stat('conflicts','20')	
w.com2()
w.com1('system.L2Directory0','L2Directory0')
w.param('Directory_type','1')
w.param('Dir_config','1048576,16,16,1,2, 100')
w.param('buffer_sizes','8, 8, 8, 8')	
w.param('clockrate','3000')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('ports','1,1,1')
w.param('device_type','0')
w.stat('read_accesses','58824')
w.stat('write_accesses','27276')
w.stat('read_misses','1632')
w.stat('write_misses','183')
w.stat('conflicts','100')	
w.com2()

w.com1('system.L20','L20')
w.param('L2_config',r.get('l2_config')) 
w.param('buffer_sizes','16, 16, 16, 16')
w.param('clockrate','3000')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('ports',r.get('l2_port'))
w.param('device_type','0')
w.stat('read_accesses',r.get('l2_read_accesses'))
w.stat('write_accesses',r.get('l2_write_accesses'))
w.stat('read_misses',r.get('l2_read_misses'))
w.stat('write_misses',r.get('l2_write_misses'))
w.stat('conflicts',r.get('l2_conflicts'))	
w.stat('duty_cycle','1')	
w.com2()

w.com1('system.L30','L30')
w.param('L3_config',r.get('l3_config'))
w.param('clockrate','3000')
w.param('ports',r.get('l3_port'))
w.param('device_type','0')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('buffer_sizes','16, 16, 16, 16')
w.stat('read_accesses',r.get('l3_read_accesses'))
w.stat('write_accesses',r.get('l3_write_accesses'))
w.stat('read_misses',r.get('l3_read_misses'))
w.stat('write_misses',r.get('l3_write_misses'))
w.stat('conflicts',r.get('l3_conflicts'))	
w.stat('duty_cycle','1')	
w.com2()

w.com1('system.NoC0','noc0')
w.param('clockrate','3000')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('type','0')
w.param('horizontal_nodes','1')
w.param('vertical_nodes','1')
w.param('has_global_link','0')
w.param('link_throughput','1')
w.param('link_latency','1')
w.param('input_ports','1')
w.param('output_ports','1')
w.param('flit_bits','256')
w.param('chip_coverage','1')
w.param('link_routing_over_percentage','0.5')
w.stat('total_accesses',r.get('net_access'))
w.stat('duty_cycle','1')
w.com2()		

w.com1('system.mc','mc')
w.param('type','0') 
w.param('mc_clock','200') 
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('peak_transfer_rate','3200')
w.param('block_size','64')
w.param('number_mcs','0')
w.param('memory_channels_per_mc','1')
w.param('number_ranks','2')
w.param('withPHY','0')
w.param('req_window_size_per_channel','32')
w.param('IO_buffer_size_per_channel','32')
w.param('databus_width','128')
w.param('addressbus_width','51')
w.stat('memory_accesses',r.get('memory_accesses'))
w.stat('memory_reads',r.get('memory_reads'))
w.stat('memory_writes',r.get('memory_writes'))  			
w.com2()

# m2s does have below 
w.com1('system.niu','niu')
w.param('type','0') 
w.param('clockrate','350')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('number_units','0') 
w.stat('duty_cycle','1.0') 
w.stat('total_load_perc','0.7') 
w.com2()
w.com1('system.pcie','pcie')
w.param('type','0') 
w.param('withPHY','1')
w.param('clockrate','350')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.param('number_units','0')
w.param('num_channels','8') 
w.stat('duty_cycle','1.0') 
w.stat('total_load_perc','0.7') 
w.com2()
w.com1('system.flashc','flashc')
w.param('number_flashcs','0')
w.param('type','1') 
w.param('withPHY','1')
w.param('peak_transfer_rate','200')
w.param('vdd','0')
w.param('power_gating_vcc','-1')
w.stat('duty_cycle','1.0') 
w.stat('total_load_perc','0.7') 
w.com2()
w.com2()
w.com2()
